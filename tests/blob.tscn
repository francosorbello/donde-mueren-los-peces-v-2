[gd_scene load_steps=6 format=3 uid="uid://c22a3jpqg4640"]

[ext_resource type="Texture2D" uid="uid://ue0ly1mrhfhv" path="res://assets/GRAPHICS/bubble.png" id="1_artou"]

[sub_resource type="Shader" id="Shader_nlthb"]
code = "shader_type canvas_item;

//Noise texture only used if useSpriteTexture is set to false
uniform sampler2D noiseTexture;

//Wether to use shader param noise or texture as noise
uniform bool useSpriteTexture = false;

//The speed of the movement
uniform float speed : hint_range(0.01,1.0) = 0.1;

//How much it can differ from circle
uniform float amplitude : hint_range(0.01,1.0) = 0.2;

float circle(vec2 center, float radius, vec2 p){
    return length(p - center) - radius;
}

void fragment(){
	vec4 noise;

	if (useSpriteTexture){
		noise = texture(TEXTURE, UV + speed * TIME) - 0.5;
	}
	else{
		noise = texture(noiseTexture, UV + speed * TIME) - 0.5;
	}

	float sdf = circle(vec2(0.5, 0.5), 0.4, UV) + amplitude * noise.r;

	if (sdf > 0.0){
		COLOR = vec4(1.0, 1.0, 1.0, 0.0);
	}
	else{
		COLOR = vec4(1.0, 1.0, 1.0, min(sdf*-200.0, 1.0));
	}
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_artou"]
frequency = 0.3652

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_nlthb"]
noise = SubResource("FastNoiseLite_artou")
seamless = true
normalize = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mbgun"]
shader = SubResource("Shader_nlthb")
shader_parameter/noiseTexture = SubResource("NoiseTexture2D_nlthb")
shader_parameter/useSpriteTexture = false
shader_parameter/speed = 0.1
shader_parameter/amplitude = 0.2

[node name="Sprite2D" type="Sprite2D"]
material = SubResource("ShaderMaterial_mbgun")
position = Vector2(814.99994, 425)
scale = Vector2(30, 30)
texture = ExtResource("1_artou")
